<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.questions.controllers.cms"/>


    <bean id="questionsCoreDataImportedEventListener" parent="abstractCoreDataImportedEventListener">
        <property name="supportedChannels">
            <list value-type="de.hybris.platform.commerceservices.enums.SiteChannel">
                <value>B2C</value>
                <!--
                                <value>B2B</value>
                -->
            </list>
        </property>
        <property name="addonExtensionMetadata">
            <bean class="de.hybris.platform.addonsupport.data.AddonExtensionMetadata">
                <property name="suffixChannel" value="false"/>
                <property name="baseExtensionName" value="questions"/>
            </bean>
        </property>
    </bean>

    <bean id="questionsSampleDataEventListener" parent="abstractGenericAddOnSampleDataEventListener">
        <property name="extensionName" value="questions"/>
    </bean>

    <alias name="defaultQuestionPopulator" alias="questionPopulator"/>
    <bean class="com.questions.populator.QuestionPopulator" id="defaultQuestionPopulator"/>

    <alias name="defaultQuestionConverter" alias="questionConverter"/>
    <bean id="defaultQuestionConverter" parent="abstractPopulatingConverter">
        <property name="targetClass" value="com.questions.data.QuestionData"/>
        <property name="populators">
            <list>
                <ref bean="questionPopulator"/>
            </list>
        </property>
    </bean>

    <bean parent="configurablePopulatorModification">
        <property name="target" ref="productConfiguredPopulator"/>
        <property name="keyType" value="de.hybris.platform.commercefacades.product.ProductOption"/>
        <property name="key" value="QUESTIONS"/>
        <property name="add" ref="questionPopulator"/>
    </bean>

    <bean class="com.questions.provider.ProductQuestionsCountProvider" id="productQuestionsCountProvider"/>

    <bean class="com.questions.provider.ProductQuestionsCountFacetDisplayNameProvider"
          id="productQuestionsCountFacetDisplayNameProvider"/>

    <alias name="customSearchResultProductPopulator" alias="commerceSearchResultProductPopulator"/>
    <bean id="customSearchResultProductPopulator"
          class="com.questions.populator.CustomSearchResultVariantProductPopulator"
    parent="variantCommerceSearchResultProductPopulator">
    </bean>

    <bean class="com.questions.listener.TrainingEmailEventListener" id="trainingEmailEventListener">
        <property name="tenantService" ref="defaultTenantService"/>
        <property name="clusterService" ref="clusterService"/>
    </bean>

    <bean class="com.questions.dao.impl.QuestionDaoImpl" id="questionDao"/>

    <bean class="com.questions.service.impl.QuestionServiceImpl" id="questionService"/>

    <bean class="com.questions.job.SendQuestionsJob" id="sendQuestionsJob">
        <property name="flexibleSearchService" ref="defaultFlexibleSearchService"/>
        <property name="modelService" ref="modelService"/>
        <property name="sessionService" ref="defaultSessionService"/>
    </bean>

    <bean id="trainingEmailProcessDefinitionResource"
          class="de.hybris.platform.processengine.definition.ProcessDefinitionResource">
        <property name="resource" value="classpath:/questions/processes/trainingEmailProcess.xml"/>
    </bean>

    <bean id="generateTrainingEmailAction" parent="abstractGenerateEmailAction">
        <property name="frontendTemplateName" value="TrainingEmailTemplate"/>
    </bean>

    <bean class="com.questions.context.TrainingEmailContext" id="trainingEmailContext" parent="abstractEmailContext" scope="prototype"/>


</beans>
